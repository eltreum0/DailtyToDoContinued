# description of this workflow, can be anything you want
name: Release

# we need to let GitHub know _when_ we want to release, typically only when we create a new tag.
# this will target only tags, and not all pushes to the master branch.
# this part can be heavily customized to your liking, like targeting only tags that match a certain word,
# other branches or even pullrequests.
on:
  push:
    tags:
     - 'v*.*.*'
     #- '*'

# a workflow is built up as jobs, and within these jobs are steps
jobs:

  # "release" is a job, you can name it anything you want
  release:

    # we can run our steps on pretty much anything, but the "ubuntu-latest" image is a safe bet
    runs-on: ubuntu-22.04 #ubuntu-latest

    # "steps" holds a list of all the steps needed to package and release our AddOn
    steps:

      # we first have to clone the AddOn project, this is a required step
      - name: Clone project
        uses: actions/checkout@v4  # note: checkout@v2 breaks git history, so generating a changelog and
                                   # file naming for non-tagged builds will not work properly

      # once cloned, we just run the GitHub Action for the packager project
      - name: WoW Packager
        #uses: BigWigsMods/packager@v1.0.3
        #uses: BigWigsMods/packager@multitoc #multitoc seems like will be discontinued in the future
        uses: BigWigsMods/packager@v2
        with:
        # args: release.sh -n "{package-name}"
         args: release.sh -n "DailyToDo" #-g game-version

      # specify the environment variables used by the packager, matching the secrets from the project on GitHub
    env:
      CF_API_KEY: ${{ secrets.CF_API_KEY }}
      #WOWI_API_TOKEN: ${{ secrets.WOWI_API_TOKEN }}
      WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
